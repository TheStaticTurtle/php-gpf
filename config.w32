ARG_WITH('pgf', 'The PGF image format support', 'no');

if (PHP_PGF != 'no') {
	if (
		CHECK_HEADER_ADD_INCLUDE("PGFimage.h",    "CFLAGS_PGF", PHP_PGF + ";libpgf\\include") &&
		CHECK_HEADER_ADD_INCLUDE("PGFplatform.h", "CFLAGS_PGF", PHP_PGF + ";libpgf\\include") &&
		CHECK_HEADER_ADD_INCLUDE("PGFstream.h",   "CFLAGS_PGF", PHP_PGF + ";libpgf\\include") &&
		CHECK_HEADER_ADD_INCLUDE("PGFtypes.h",    "CFLAGS_PGF", PHP_PGF + ";libpgf\\include")
	) {

		EXTENSION('pgf', 'php_pgf.cpp pgf_decode.cpp', null, "-Ilibpgf/include");

		ADD_SOURCES(
			"libpgf/src", 
			"Decoder.cpp Encoder.cpp PGFimage.cpp PGFstream.cpp Subband.cpp WaveletTransform.cpp", 
			"pgf"
		);

		AC_DEFINE('HAVE_PGF', 1, 'PGF support enabled');

		PHP_INSTALL_HEADERS("libpgf/include", "PGFimage.h PGFplatform.h PGFstream.h PGFtypes.h");
	} else {
		WARNING("pgf not enabled; libraries and headers not found");
	}
}